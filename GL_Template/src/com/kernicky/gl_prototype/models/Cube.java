package com.kernicky.gl_prototype.models;

import com.kernicky.gl_prototype.SampleScene;
import com.kernicky.gl_prototype.math.Quaternion;

public class Cube extends ReflectiveModel {
	public static final float[] coords = { 0.49999976f, -0.49999976f, -0.49999976f, 0.49999976f, -0.49999976f, 0.49999976f, -0.49999976f, -0.49999976f, 0.49999976f, 0.49999976f, 0.49999976f, -0.49999925f, -0.49999976f, 0.49999976f, -0.49999976f, -0.49999976f, 0.49999976f, 0.49999976f, 0.49999976f, -0.49999976f, -0.49999976f, 0.49999976f, 0.49999976f, -0.49999925f, 0.49999925f, 0.49999976f, 0.50000024f, 0.49999976f, -0.49999976f, 0.49999976f, 0.49999925f, 0.49999976f, 0.50000024f, -0.49999976f, -0.49999976f, 0.49999976f, -0.49999976f, -0.49999976f, 0.49999976f, -0.49999976f, 0.49999976f, 0.49999976f, -0.49999976f, -0.49999976f, -0.49999976f, 0.49999976f, 0.49999976f, -0.49999925f, 0.49999976f, -0.49999976f, -0.49999976f, -0.49999976f, -0.49999976f, -0.49999976f, -0.49999976f, -0.49999976f, -0.49999976f, 0.49999976f, -0.49999976f, -0.49999976f, -0.49999976f, -0.49999976f, 0.49999976f, 0.49999925f, 0.49999976f, 0.50000024f, 0.49999976f, 0.49999976f, -0.49999925f, -0.49999976f, 0.49999976f, 0.49999976f, 0.49999976f, -0.49999976f, 0.49999976f, 0.49999976f, -0.49999976f, -0.49999976f, 0.49999925f, 0.49999976f, 0.50000024f, 0.49999925f, 0.49999976f, 0.50000024f, -0.49999976f, 0.49999976f, 0.49999976f, -0.49999976f, -0.49999976f, 0.49999976f, -0.49999976f, 0.49999976f, 0.49999976f, -0.49999976f, 0.49999976f, -0.49999976f, -0.49999976f, -0.49999976f, -0.49999976f, -0.49999976f, 0.49999976f, -0.49999976f, 0.49999976f, 0.49999976f, -0.49999925f, -0.49999976f, -0.49999976f, -0.49999976f };
	public static final float[] normals = { 0.0f, -1.0f, 0.0f, 0.0f, -1.0f, 0.0f, 0.0f, -1.0f, 0.0f, -0.0f, 1.0f, 0.0f, -0.0f, 1.0f, 0.0f, -0.0f, 1.0f, 0.0f, 1.0f, -0.0f, 1.0E-6f, 1.0f, -0.0f, 1.0E-6f, 1.0f, -0.0f, 1.0E-6f, -0.0f, -0.0f, 1.0f, -0.0f, -0.0f, 1.0f, -0.0f, -0.0f, 1.0f, -1.0f, -0.0f, -0.0f, -1.0f, -0.0f, -0.0f, -1.0f, -0.0f, -0.0f, 0.0f, 0.0f, -1.0f, 0.0f, 0.0f, -1.0f, 0.0f, 0.0f, -1.0f, 0.0f, -1.0f, 0.0f, 0.0f, -1.0f, 0.0f, 0.0f, -1.0f, 0.0f, -0.0f, 1.0f, 0.0f, -0.0f, 1.0f, 0.0f, -0.0f, 1.0f, 0.0f, 1.0f, 0.0f, -0.0f, 1.0f, 0.0f, -0.0f, 1.0f, 0.0f, -0.0f, -0.0f, -0.0f, 1.0f, -0.0f, -0.0f, 1.0f, -0.0f, -0.0f, 1.0f, -1.0f, -0.0f, -0.0f, -1.0f, -0.0f, -0.0f, -1.0f, -0.0f, -0.0f, 0.0f, 0.0f, -1.0f, 0.0f, 0.0f, -1.0f, 0.0f, 0.0f, -1.0f };
	public Cube(float x, float y, float z) {
		super();
		this.position = new Quaternion(x, y, z, 0);
		position.print();

		position.normalize();
		this.angle = Quaternion.rotateTo(new Quaternion(0, 0, 1, 0), this.position);
		position.print();
		position.multiply(7);
		position.print();

		//transList.set(3, new Transformation(position.x, position.y, position.z));
	}
	
	
	public void setData() {
		setCoords(coords);
		setNormals(normals);
		setTransparency(.3f);

		setAmb(new float[]{0.3f, .3f, 0.3f});
		setDiff(new float[]{.3f, .3f, .3f});
		setSpec(new float[]{0.3f, 0.3f, 0.3f});
		setShine(300);
	
	}

}
